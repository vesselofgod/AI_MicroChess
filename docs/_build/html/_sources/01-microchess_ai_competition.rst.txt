
Microchess AI 경진대회
======================

본 경진대회는 Game AI에 대한 학생들의 흥미를 유발하기 위해 기획되었다.
따라서, 학생들에게 주어진 각종 제약(시간, 컴퓨팅 자원)안에서 AI를 구현하고 실험하기에 너무 어렵지 않도록,
규모가 작을 필요가 있었다. 하지만 너무 쉽게 해결할 수 없도록 너무 단순하지는 않아야 했다.

.. _microchess:
.. figure:: figs/microchess.png
   :figwidth: 150

   Microchess

:ref:`microchess` 는 일반 체스의 일부분 만을 사용하는 미니 체스 중 하나로써,
기존 체스에 비해 작은 탐색 공간을 가지고 있으면서도, 모든 경우의 수를 따져보는 것은 거의 불가능했기 때문에
경진대회 종목으로 선정되었다. 기존 체스는 대략 :math:`35^{80}` 가지 경우의 수를 가지고 있는 것으로
알려져 있다. 반면 Microchess는 훨씬 작은 :math:`10^{20}` 규모로 추정된다.
비록 문제의 규모는 매우 축소되었지만, 모든 경우의 수를 따지는 것은 천문학적인 규모이기 때문에,
다음 수를 결정하기 위해서는 보다 효율적인 방법이 필요하다.

Microchess는 일반 체스가 가지는 특징(완전 정보공개, 불확실성 없음)을 가지지만, 일부 다른 점이 있다.

- :math:`4 \times 5` 미니체스
- 탐색공간이 매우 크지는 않지만, 쉽게 해결은 어려움
- 플레이어는 퀸을 제외한 기물을 하나씩 가지고 있음
- 기물의 움직임은 일반 체스와 동일
- Castling 가능

경진대회 규칙
-------------

이 경진대회에서는 대부분 일반 체스의 규칙을 따르지만, 게임 시간을 절약하고, 무승부 [#]_ 를 줄이기 위해,
AI 경진대회에 적합하게 몇 가지 규칙을 변경하였다.

일반 체스는 무승부가 전체 게임의 30%가 넘을 정도로 무승부가 많은 게임이다. (Black의 승률보다 높음)
Microchess에서 무승부 비율은 명확하게 조사된 바가 없지만, 무승부 확률이 동일하거나, 높은 것으로 추정된다.
일정 수준의 성능을 보이는 AI들끼리의 게임은 대부분 무승부로 끝나는 경향이 있다.
따라서, 이 경진대회에서는 보다 쉽게 승패를 가릴 수 있도록 무승부 조건을 강화하였다.

또한, 게임 플레이 데이터로 의사결정 모델을 학습할 때, 무승부가 되었을 때는 유용한 정보를 알아내기 어렵기 때문에,
무승부 비율이 줄어들면 기계학습 알고리즘을 사용하여 AI를 학습할 때도 도움이된다.


- 최대 80턴 으로 제한
   - 대부분의 게임은 50턴 이내에서 종료됨
   - AI 들의 경우 무의미한 수를 반복하면서 지나치게 오랬동안 게임을 할 때도 있기 때문에 최대 턴에 제한을 둠

- 플레이어마다 전체 게임 400초 시간제한을 둠
   - 턴 마다 시간제한은 없지만, 한 게임에서 400초를 모두 소모하면 패배
   - 플레이어가 한 턴에 약 10초를 소모할 것이라고 가정해서 400초 시간제한을 둔 것
   - 전체 400초를 초과하지 않는 범위내에서 플레이어가 임의로 조정가능함
      - 최대 80턴까지 게임하면 전체 게임 시간은 800초
      - 400초 = (80턴 :math:`\times` 10초) / 2플레이어
      - 한 턴에 10초 가정

- 승리/패배 조건
   - 기존 체스의 승리조건을 만족하면 승리(예. 상대 킹을 체크메이트)
   - 최대 턴을 초과하면, 남은 기물에 따라 점수를 계산하여 높은 쪽이 승리함
   - 기존 무승부 규칙 [#]_ 에 따라 무승부가 되면, 남은 기물의 점수를 계산하여 승패를 판단함
   - 최대 턴 초과 또는 무승부로 게임 종료 후, 기물 점수도 동일한 경우에만 무승부로 판단함
   - 한 플레이어가 먼저 400초 시간제한을 초과하면 패배로 판단함


점수계산
--------


.. _score_table:
.. figure:: figs/score-table.png
    :figwidth: 200

    점수 표

무승부로 게임이 종료되면, :ref:`score_table` [#]_ 을 참조하여 남은 기물의 점수를 계산하여 게임의 승패를 판단한다.


다음은 :ref:`score_example` 를 보여준다.

.. _score_example:
.. figure:: figs/microchess-score.png
    :figwidth: 200

    점수 계산 예

- 백: ♔(K)+♖(R)+♘(N)+♙(P)= 4+5+3+1 = 13
- 흑: ♚(k)+♟(p)= 4+1 = 5

주의사항
--------

- 실격패 조건
   - 400초를 모두 모소하는 경우
   - 프로그램이 종료될 수준의 예외/에러 발생
   - 유효하지 않은 수를 둘 경우
   - 부정행위를 할 경우
      - 파일 시스템에서 자신의 AI에게 허용되지 않은 경로에 접근하는 경우
      - 네트워크에 연결하는 경우
      - 상대 AI 혹은 경진대회 시스템에 영향을 주기 위해 별도의 thread, process 를 실행하는 경우


운영 게시판
-----------

- Google Groups를 이용
   - https://groups.google.com/forum/#!forum/microchess_ai

- 운영목적
   - 공지사항 전달
   - 질의응답 게시판
   - 과제제출용

최종 우승자 결정
----------------

Double Round-Robin Tournament (Full League)

- 모든 AI는 서로 흑과 백으로 여러 번 [#]_ 경기를 진행
- 가장 많은 점수를 획득한 AI가 우승
    - 점수: 승(+1), 패(0), 무승부(+1/2)

.. [#] 일반 체스는 무승부 비율이 높음 약 30~35 %
.. [#] 무승부 규칙: 기물이 부족해 체크메이트 불가, 어떤 기물도 이동 불가, 50턴 동안 폰을 이동하지 않거나, 기물이 잡히지 않음, 5번 이상 똑같은 수 반복, https://en.wikipedia.org/wiki/Chess#Draw
.. [#] 사용하는 전략에 따라, 기물의 점수에 이견이 있지만, 많은 Chess AI들이 이 테이블의 점수를 따름
.. [#] 정확한 경기횟수는 미정, 일반 체스는 두 번 이지만 AI 체스에서는 두 번만으로 평가가 어려울 수 있음

